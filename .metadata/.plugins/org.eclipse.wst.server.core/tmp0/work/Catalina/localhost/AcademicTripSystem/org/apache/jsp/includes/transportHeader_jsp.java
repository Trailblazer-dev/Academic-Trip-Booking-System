/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 22:26:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.model.User;

public final class transportHeader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.academictrip.model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    User currentUser = (User) session.getAttribute("user");
    String userRole = currentUser != null ? currentUser.getRole() : "";
    String pageName = request.getRequestURI().substring(request.getRequestURI().lastIndexOf("/") + 1);

      out.write("\n");
      out.write("<header>\n");
      out.write("    <div class=\"header-container\">\n");
      out.write("        <div class=\"logo\">\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/dashboard.jsp\">\n");
      out.write("                Academic Trip System\n");
      out.write("            </a>\n");
      out.write("        </div>\n");
      out.write("        <nav>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/dashboard.jsp\" class=\"");
      out.print( pageName.equals("dashboard.jsp") ? "active" : "" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-tachometer-alt mr-2\"></i> Dashboard\n");
      out.write("                </a></li>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageDrivers.jsp\" class=\"");
      out.print( pageName.equals("manageDrivers.jsp") ? "active" : "" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-users mr-2\"></i> Drivers\n");
      out.write("                </a></li>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageVehicles.jsp\" class=\"");
      out.print( pageName.equals("manageVehicles.jsp") ? "active" : "" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-bus mr-2\"></i> Vehicles\n");
      out.write("                </a></li>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/assignResources.jsp\" class=\"");
      out.print( pageName.equals("assignResources.jsp") ? "active" : "" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-tasks mr-2\"></i> Assign Resources\n");
      out.write("                </a></li>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/viewAssignments.jsp\" class=\"");
      out.print( pageName.equals("viewAssignments.jsp") ? "active" : "" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-clipboard-list mr-2\"></i> View Assignments\n");
      out.write("                </a></li>\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\">\n");
      out.write("                    <i class=\"fas fa-sign-out-alt mr-2\"></i> Logout\n");
      out.write("                </a></li>\n");
      out.write("            </ul>\n");
      out.write("        </nav>\n");
      out.write("    </div>\n");
      out.write("</header>\n");
      out.write("\n");
 if (request.getParameter("successMessage") != null) { 
      out.write("\n");
      out.write("    <div class=\"alert alert-success mx-4 my-3\" id=\"successAlert\">\n");
      out.write("        <div class=\"flex\">\n");
      out.write("            <div class=\"flex-shrink-0\">\n");
      out.write("                <i class=\"fas fa-check-circle\"></i>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-3\">\n");
      out.write("                <p>");
      out.print( request.getParameter("successMessage") );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-auto\">\n");
      out.write("                <button onclick=\"document.getElementById('successAlert').style.display='none'\" class=\"text-success\">\n");
      out.write("                    <i class=\"fas fa-times\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
 } 
      out.write('\n');
      out.write('\n');
 if (request.getParameter("errorMessage") != null) { 
      out.write("\n");
      out.write("    <div class=\"alert alert-danger mx-4 my-3\" id=\"errorAlert\">\n");
      out.write("        <div class=\"flex\">\n");
      out.write("            <div class=\"flex-shrink-0\">\n");
      out.write("                <i class=\"fas fa-exclamation-circle\"></i>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-3\">\n");
      out.write("                <p>");
      out.print( request.getParameter("errorMessage") );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-auto\">\n");
      out.write("                <button onclick=\"document.getElementById('errorAlert').style.display='none'\" class=\"text-danger\">\n");
      out.write("                    <i class=\"fas fa-times\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
 } 
      out.write('\n');
      out.write('\n');
 
    // Handle session messages and clear them after displaying
    String successMessage = (String) session.getAttribute("successMessage");
    String errorMessage = (String) session.getAttribute("errorMessage");
    
    if (successMessage != null && !successMessage.isEmpty()) { 

      out.write("\n");
      out.write("    <div class=\"alert alert-success mx-4 my-3\" id=\"sessionSuccessAlert\">\n");
      out.write("        <div class=\"flex\">\n");
      out.write("            <div class=\"flex-shrink-0\">\n");
      out.write("                <i class=\"fas fa-check-circle\"></i>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-3\">\n");
      out.write("                <p>");
      out.print( successMessage );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-auto\">\n");
      out.write("                <button onclick=\"document.getElementById('sessionSuccessAlert').style.display='none'\" class=\"text-success\">\n");
      out.write("                    <i class=\"fas fa-times\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
 
        session.removeAttribute("successMessage");
    } 
    
    if (errorMessage != null && !errorMessage.isEmpty()) { 

      out.write("\n");
      out.write("    <div class=\"alert alert-danger mx-4 my-3\" id=\"sessionErrorAlert\">\n");
      out.write("        <div class=\"flex\">\n");
      out.write("            <div class=\"flex-shrink-0\">\n");
      out.write("                <i class=\"fas fa-exclamation-circle\"></i>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-3\">\n");
      out.write("                <p>");
      out.print( errorMessage );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"ml-auto\">\n");
      out.write("                <button onclick=\"document.getElementById('sessionErrorAlert').style.display='none'\" class=\"text-danger\">\n");
      out.write("                    <i class=\"fas fa-times\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
 
        session.removeAttribute("errorMessage");
    } 

      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Auto-hide alerts after 5 seconds\n");
      out.write("    window.addEventListener('DOMContentLoaded', function() {\n");
      out.write("        setTimeout(function() {\n");
      out.write("            const alerts = document.querySelectorAll('#successAlert, #errorAlert, #sessionSuccessAlert, #sessionErrorAlert');\n");
      out.write("            alerts.forEach(function(alert) {\n");
      out.write("                if (alert) alert.style.display = 'none';\n");
      out.write("            });\n");
      out.write("        }, 5000);\n");
      out.write("    });\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
