/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 00:40:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class messages_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

    // Check for success message
    String successMessage = (String) request.getAttribute("successMessage");
    if (successMessage != null && !successMessage.trim().isEmpty()) {

      out.write("\n");
      out.write("    <div class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4 flex justify-between items-center\">\n");
      out.write("        <span><i class=\"fas fa-check-circle mr-2\"></i>");
      out.print( successMessage );
      out.write("</span>\n");
      out.write("        <button type=\"button\" class=\"text-green-700\" onclick=\"this.parentElement.remove();\">\n");
      out.write("            <i class=\"fas fa-times\"></i>\n");
      out.write("        </button>\n");
      out.write("    </div>\n");

    }

    // Check for error message
    String errorMessage = (String) request.getAttribute("errorMessage");
    if (errorMessage != null && !errorMessage.trim().isEmpty()) {

      out.write("\n");
      out.write("    <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 flex justify-between items-center\">\n");
      out.write("        <span><i class=\"fas fa-exclamation-circle mr-2\"></i>");
      out.print( errorMessage );
      out.write("</span>\n");
      out.write("        <button type=\"button\" class=\"text-red-700\" onclick=\"this.parentElement.remove();\">\n");
      out.write("            <i class=\"fas fa-times\"></i>\n");
      out.write("        </button>\n");
      out.write("    </div>\n");

    }

    // Check for info message
    String infoMessage = (String) request.getAttribute("infoMessage");
    if (infoMessage != null && !infoMessage.trim().isEmpty()) {

      out.write("\n");
      out.write("    <div class=\"bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded mb-4 flex justify-between items-center\">\n");
      out.write("        <span><i class=\"fas fa-info-circle mr-2\"></i>");
      out.print( infoMessage );
      out.write("</span>\n");
      out.write("        <button type=\"button\" class=\"text-blue-700\" onclick=\"this.parentElement.remove();\">\n");
      out.write("            <i class=\"fas fa-times\"></i>\n");
      out.write("        </button>\n");
      out.write("    </div>\n");

    }

    // Check for warning message
    String warningMessage = (String) request.getAttribute("warningMessage");
    if (warningMessage != null && !warningMessage.trim().isEmpty()) {

      out.write("\n");
      out.write("    <div class=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded mb-4 flex justify-between items-center\">\n");
      out.write("        <span><i class=\"fas fa-exclamation-triangle mr-2\"></i>");
      out.print( warningMessage );
      out.write("</span>\n");
      out.write("        <button type=\"button\" class=\"text-yellow-700\" onclick=\"this.parentElement.remove();\">\n");
      out.write("            <i class=\"fas fa-times\"></i>\n");
      out.write("        </button>\n");
      out.write("    </div>\n");

    }

      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
