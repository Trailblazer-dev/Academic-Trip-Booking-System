/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-11 16:53:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.dao.*;
import com.academictrip.model.*;
import java.util.*;
import java.time.format.*;
import java.time.LocalDate;

public final class viewAssignments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(10);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.time.format");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.academictrip.dao");
    _jspx_imports_packages.add("com.academictrip.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.LocalDate");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    // Get list of all trips first
    TripDAO tripDAO = new TripDAO();
    List<Trip> allTrips = tripDAO.getAllTrips();
    
    // Filter to only include trips that have driver-vehicle assignments
    List<Trip> assignedTrips = new ArrayList<>();
    for (Trip trip : allTrips) {
        if (trip.getDriverVehicleId() != null && !trip.getDriverVehicleId().isEmpty()) {
            assignedTrips.add(trip);
        }
    }
    
    // Get driver-vehicle assignments
    DriverVehicleDAO dvDAO = new DriverVehicleDAO();
    
    // Create a map of driver IDs to Driver objects for quick lookup
    DriverDAO driverDAO = new DriverDAO();
    Map<String, Driver> driverMap = new HashMap<>();
    List<Driver> allDrivers = driverDAO.getAllDrivers();
    for (Driver driver : allDrivers) {
        driverMap.put(driver.getDriverId(), driver);
    }
    
    // Create a map of vehicle IDs to Vehicle objects for quick lookup
    VehicleDAO vehicleDAO = new VehicleDAO();
    Map<String, Vehicle> vehicleMap = new HashMap<>();
    List<Vehicle> allVehicles = vehicleDAO.getAllVehicles();
    for (Vehicle vehicle : allVehicles) {
        vehicleMap.put(vehicle.getVehicleId(), vehicle);
    }
    
    // Format dates nicely
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMM d, yyyy");
    
    // Get messages from session
    String successMessage = (String) session.getAttribute("successMessage");
    String errorMessage = (String) session.getAttribute("errorMessage");
    
    // Clear messages after retrieving
    session.removeAttribute("successMessage");
    session.removeAttribute("errorMessage");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>View Assignments | Academic Trip System</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/styles.css\">\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-50\">\n");
      out.write("    <div class=\"page-wrapper\">\n");
      out.write("        <!-- Include standardized header -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/transportHeader.jsp", out, false);
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=\"main-content\">\n");
      out.write("            <div class=\"container mx-auto px-4 py-8\">\n");
      out.write("                <!-- Page header -->\n");
      out.write("                <div class=\"md:flex md:items-center md:justify-between mb-8\">\n");
      out.write("                    <div class=\"flex-1 min-w-0\">\n");
      out.write("                        <h1 class=\"text-3xl font-bold text-gray-900\">\n");
      out.write("                            <i class=\"fas fa-clipboard-list mr-2 text-secondary\"></i>View Assignments\n");
      out.write("                        </h1>\n");
      out.write("                        <p class=\"mt-1 text-sm text-gray-500\">\n");
      out.write("                            Manage all driver and vehicle assignments for academic trips\n");
      out.write("                        </p>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"mt-4 md:mt-0 flex\">\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/assignResources.jsp\" \n");
      out.write("                           class=\"btn btn-secondary hover:bg-orange-700 text-white py-2 px-4 rounded-lg flex items-center\">\n");
      out.write("                            <i class=\"fas fa-plus-circle mr-2\"></i> New Assignment\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Filter & Search -->\n");
      out.write("                <div class=\"bg-white p-4 rounded-lg shadow mb-6\">\n");
      out.write("                    <div class=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n");
      out.write("                        <div class=\"relative w-full md:w-64\">\n");
      out.write("                            <input type=\"text\" id=\"assignmentSearch\" placeholder=\"Search assignments...\" \n");
      out.write("                                   class=\"w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400\">\n");
      out.write("                            <i class=\"fas fa-search absolute left-3 top-3 text-gray-400\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"flex flex-wrap gap-4\">\n");
      out.write("                            <select id=\"filterStatus\" class=\"rounded-lg border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400\">\n");
      out.write("                                <option value=\"all\">All Status</option>\n");
      out.write("                                <option value=\"upcoming\">Upcoming</option>\n");
      out.write("                                <option value=\"ongoing\">Ongoing</option>\n");
      out.write("                                <option value=\"completed\">Completed</option>\n");
      out.write("                            </select>\n");
      out.write("                            <button id=\"refreshBtn\" class=\"bg-gray-200 hover:bg-gray-300 text-gray-700 py-2 px-4 rounded-lg\">\n");
      out.write("                                <i class=\"fas fa-sync-alt mr-2\"></i> Refresh\n");
      out.write("                            </button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Assignments List -->\n");
      out.write("                <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n");
      out.write("                    <div class=\"overflow-x-auto\">\n");
      out.write("                        <table id=\"assignmentsTable\" class=\"min-w-full divide-y divide-gray-200\">\n");
      out.write("                            <thead class=\"bg-gray-100\">\n");
      out.write("                                <tr>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Trip ID</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Destination</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Travel Dates</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Driver</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vehicle</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n");
      out.write("                                    <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody class=\"bg-white divide-y divide-gray-200\">\n");
      out.write("                                ");
 
                                if (assignedTrips != null && !assignedTrips.isEmpty()) {
                                    for (Trip trip : assignedTrips) {
                                        // Get the related driver-vehicle assignment
                                        DriverVehicle dv = dvDAO.getAssignmentById(trip.getDriverVehicleId());
                                        if (dv == null) continue;
                                        
                                        // Get Driver and Vehicle details
                                        Driver driver = driverMap.get(dv.getDriverId());
                                        Vehicle vehicle = vehicleMap.get(dv.getVehicleId());
                                        if (driver == null || vehicle == null) continue;
                                        
                                        // Determine status based on dates
                                        String status;
                                        LocalDate today = LocalDate.now();
                                        
                                        if (today.isBefore(trip.getDepartureDate())) {
                                            status = "upcoming";
                                        } else if (today.isAfter(trip.getReturnDate())) {
                                            status = "completed";
                                        } else {
                                            status = "ongoing";
                                        }
                                
      out.write("\n");
      out.write("                                <tr class=\"hover:bg-gray-50 transition\" data-status=\"");
      out.print( status );
      out.write("\">\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n");
      out.write("                                        ");
      out.print( trip.getTripId() );
      out.write("\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n");
      out.write("                                        ");
      out.print( trip.getDestination() );
      out.write("\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n");
      out.write("                                        ");
      out.print( formatter.format(trip.getDepartureDate()) );
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( formatter.format(trip.getReturnDate()) );
      out.write("\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n");
      out.write("                                        <div class=\"flex items-center\">\n");
      out.write("                                            <div class=\"flex-shrink-0 h-8 w-8 bg-blue-100 rounded-full flex items-center justify-center\">\n");
      out.write("                                                <i class=\"fas fa-user text-blue-500\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"ml-3\">\n");
      out.write("                                                <div class=\"text-sm font-medium text-gray-900\">\n");
      out.write("                                                    ");
      out.print( driver.getFirstname() );
      out.write(' ');
      out.print( driver.getLastname() );
      out.write("\n");
      out.write("                                                </div>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n");
      out.write("                                        <div class=\"flex items-center\">\n");
      out.write("                                            <div class=\"flex-shrink-0 h-8 w-8 bg-indigo-100 rounded-full flex items-center justify-center\">\n");
      out.write("                                                <i class=\"fas fa-bus text-indigo-500\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"ml-3\">\n");
      out.write("                                                <div class=\"text-sm font-medium text-gray-900\">\n");
      out.write("                                                    ");
      out.print( vehicle.getMake() );
      out.write(' ');
      out.print( vehicle.getModel() );
      out.write("\n");
      out.write("                                                </div>\n");
      out.write("                                                <div class=\"text-xs text-gray-500\">\n");
      out.write("                                                    ");
      out.print( vehicle.getRegistration() );
      out.write(' ');
      out.write('|');
      out.write(' ');
      out.print( vehicle.getCapacity() );
      out.write(" seats\n");
      out.write("                                                </div>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap\">\n");
      out.write("                                        ");
 if (status.equals("upcoming")) { 
      out.write("\n");
      out.write("                                            <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n");
      out.write("                                                Upcoming\n");
      out.write("                                            </span>\n");
      out.write("                                        ");
 } else if (status.equals("ongoing")) { 
      out.write("\n");
      out.write("                                            <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n");
      out.write("                                                Ongoing\n");
      out.write("                                            </span>\n");
      out.write("                                        ");
 } else { 
      out.write("\n");
      out.write("                                            <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800\">\n");
      out.write("                                                Completed\n");
      out.write("                                            </span>\n");
      out.write("                                        ");
 } 
      out.write("\n");
      out.write("                                    </td>\n");
      out.write("                                    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n");
      out.write("                                        <div class=\"flex space-x-2\">\n");
      out.write("                                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/tripDetails.jsp?id=");
      out.print( trip.getTripId() );
      out.write("\" \n");
      out.write("                                               class=\"text-indigo-600 hover:text-indigo-900\" title=\"View Details\">\n");
      out.write("                                                <i class=\"fas fa-eye\"></i>\n");
      out.write("                                            </a>\n");
      out.write("                                            ");
 if (status.equals("upcoming")) { 
      out.write("\n");
      out.write("                                                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/editAssignment.jsp?tripId=");
      out.print( trip.getTripId() );
      out.write("\" \n");
      out.write("                                                   class=\"text-blue-600 hover:text-blue-900\" title=\"Edit Assignment\">\n");
      out.write("                                                    <i class=\"fas fa-edit\"></i>\n");
      out.write("                                                </a>\n");
      out.write("                                                <button onclick=\"confirmUnassign('");
      out.print( trip.getTripId() );
      out.write("', '");
      out.print( trip.getDestination() );
      out.write("')\" \n");
      out.write("                                                        class=\"text-red-600 hover:text-red-900\" title=\"Remove Assignment\">\n");
      out.write("                                                    <i class=\"fas fa-unlink\"></i>\n");
      out.write("                                                </button>\n");
      out.write("                                            ");
 } 
      out.write("\n");
      out.write("                                        </div>\n");
      out.write("                                    </td>\n");
      out.write("                                </tr>\n");
      out.write("                                ");
 
                                    }
                                } else {
                                
      out.write("\n");
      out.write("                                <tr>\n");
      out.write("                                    <td colspan=\"7\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n");
      out.write("                                        No assignments found. <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/assignResources.jsp\" class=\"text-indigo-600 hover:underline\">Create one now</a>.\n");
      out.write("                                    </td>\n");
      out.write("                                </tr>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Stats Cards -->\n");
      out.write("                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n");
      out.write("                    <div class=\"bg-white rounded-lg shadow-md p-6 border-t-4 border-blue-500\">\n");
      out.write("                        <div class=\"flex items-center\">\n");
      out.write("                            <div class=\"p-3 rounded-full bg-blue-100 mr-4\">\n");
      out.write("                                <i class=\"fas fa-clipboard-list text-xl text-blue-500\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div>\n");
      out.write("                                <h3 class=\"text-lg font-semibold text-gray-700\">Total Assignments</h3>\n");
      out.write("                                <p class=\"text-2xl font-bold text-gray-800\">");
      out.print( assignedTrips.size() );
      out.write("</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    <div class=\"bg-white rounded-lg shadow-md p-6 border-t-4 border-green-500\">\n");
      out.write("                        <div class=\"flex items-center\">\n");
      out.write("                            <div class=\"p-3 rounded-full bg-green-100 mr-4\">\n");
      out.write("                                <i class=\"fas fa-road text-xl text-green-500\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div>\n");
      out.write("                                <h3 class=\"text-lg font-semibold text-gray-700\">Active Trips</h3>\n");
      out.write("                                ");
 
                                    int activeCount = 0;
                                    for (Trip trip : assignedTrips) {
                                        LocalDate today = LocalDate.now();
                                        if (!today.isBefore(trip.getDepartureDate()) && 
                                            !today.isAfter(trip.getReturnDate())) {
                                            activeCount++;
                                        }
                                    }
                                
      out.write("\n");
      out.write("                                <p class=\"text-2xl font-bold text-gray-800\">");
      out.print( activeCount );
      out.write("</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    <div class=\"bg-white rounded-lg shadow-md p-6 border-t-4 border-purple-500\">\n");
      out.write("                        <div class=\"flex items-center\">\n");
      out.write("                            <div class=\"p-3 rounded-full bg-purple-100 mr-4\">\n");
      out.write("                                <i class=\"fas fa-calendar-alt text-xl text-purple-500\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div>\n");
      out.write("                                <h3 class=\"text-lg font-semibold text-gray-700\">Upcoming Trips</h3>\n");
      out.write("                                ");
 
                                    int upcomingCount = 0;
                                    for (Trip trip : assignedTrips) {
                                        LocalDate today = LocalDate.now();
                                        if (today.isBefore(trip.getDepartureDate())) {
                                            upcomingCount++;
                                        }
                                    }
                                
      out.write("\n");
      out.write("                                <p class=\"text-2xl font-bold text-gray-800\">");
      out.print( upcomingCount );
      out.write("</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <footer>\n");
      out.write("            <div class=\"footer-content\">\n");
      out.write("                <p>&copy; 2023 Academic Trip System. All rights reserved.</p>\n");
      out.write("                <p class=\"mt-2 text-sm text-gray-300\">Transport Management Module</p>\n");
      out.write("            </div>\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <!-- Unassign Confirmation Modal -->\n");
      out.write("    <div id=\"unassignModal\" class=\"fixed z-10 inset-0 overflow-y-auto hidden\">\n");
      out.write("        <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center\">\n");
      out.write("            <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n");
      out.write("                <div class=\"absolute inset-0 bg-gray-500 opacity-75\" onclick=\"closeModal('unassignModal')\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n");
      out.write("                <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n");
      out.write("                    <div class=\"sm:flex sm:items-start\">\n");
      out.write("                        <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n");
      out.write("                            <i class=\"fas fa-exclamation-triangle text-red-600\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n");
      out.write("                            <h3 class=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\n");
      out.write("                                Remove Assignment\n");
      out.write("                            </h3>\n");
      out.write("                            <div class=\"mt-2\">\n");
      out.write("                                <p class=\"text-sm text-gray-500\" id=\"unassignConfirmationText\">\n");
      out.write("                                    Are you sure you want to remove this assignment? This will free up the driver and vehicle for other trips.\n");
      out.write("                                </p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <form id=\"unassignForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/unassignResources\" method=\"post\">\n");
      out.write("                    <input type=\"hidden\" id=\"unassignTripId\" name=\"tripId\">\n");
      out.write("                    <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n");
      out.write("                        <button type=\"submit\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\n");
      out.write("                            Remove Assignment\n");
      out.write("                        </button>\n");
      out.write("                        <button type=\"button\" onclick=\"closeModal('unassignModal')\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n");
      out.write("                            Cancel\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Auto-hide alerts after 5 seconds\n");
      out.write("            setTimeout(function() {\n");
      out.write("                const alerts = document.querySelectorAll('#successAlert, #errorAlert');\n");
      out.write("                alerts.forEach(alert => {\n");
      out.write("                    if (alert) alert.style.display = 'none';\n");
      out.write("                });\n");
      out.write("            }, 5000);\n");
      out.write("            \n");
      out.write("            // Filter functionality\n");
      out.write("            const filterStatus = document.getElementById('filterStatus');\n");
      out.write("            filterStatus.addEventListener('change', function() {\n");
      out.write("                const value = this.value;\n");
      out.write("                const rows = document.querySelectorAll('#assignmentsTable tbody tr[data-status]');\n");
      out.write("                \n");
      out.write("                rows.forEach(row => {\n");
      out.write("                    if (value === 'all' || row.getAttribute('data-status') === value) {\n");
      out.write("                        row.style.display = '';\n");
      out.write("                    } else {\n");
      out.write("                        row.style.display = 'none';\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Search functionality\n");
      out.write("            document.getElementById('assignmentSearch').addEventListener('keyup', function() {\n");
      out.write("                const searchValue = this.value.toLowerCase();\n");
      out.write("                const rows = document.querySelectorAll('#assignmentsTable tbody tr');\n");
      out.write("                \n");
      out.write("                rows.forEach(row => {\n");
      out.write("                    const text = row.textContent.toLowerCase();\n");
      out.write("                    if (text.includes(searchValue)) {\n");
      out.write("                        row.style.display = '';\n");
      out.write("                    } else {\n");
      out.write("                        row.style.display = 'none';\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Refresh button\n");
      out.write("            document.getElementById('refreshBtn').addEventListener('click', function() {\n");
      out.write("                location.reload();\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        function confirmUnassign(tripId, destination) {\n");
      out.write("            document.getElementById('unassignTripId').value = tripId;\n");
      out.write("            document.getElementById('unassignConfirmationText').textContent = \n");
      out.write("                `Are you sure you want to remove the assignment for trip to ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${destination}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("? This will free up the driver and vehicle for other trips.`;\n");
      out.write("            document.getElementById('unassignModal').classList.remove('hidden');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function closeModal(modalId) {\n");
      out.write("            document.getElementById(modalId).classList.add('hidden');\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
