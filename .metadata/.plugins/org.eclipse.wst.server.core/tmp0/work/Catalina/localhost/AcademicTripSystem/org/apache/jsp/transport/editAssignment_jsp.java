/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 17:46:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.model.*;
import com.academictrip.dao.*;
import java.util.List;
import java.time.format.DateTimeFormatter;

public final class editAssignment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.academictrip.dao");
    _jspx_imports_packages.add("com.academictrip.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Edit Assignment | Academic Trip System</title>\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-50\">\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/transportHeader.jsp", out, false);
      out.write("\n");
      out.write("    \n");
      out.write("    <div class=\"container mx-auto px-4 py-6\">\n");
      out.write("        <h1 class=\"text-2xl font-bold mb-6\">Edit Driver & Vehicle Assignment</h1>\n");
      out.write("        \n");
      out.write("        <!-- Include messages component -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/messages.jsp", out, false);
      out.write("\n");
      out.write("        \n");
      out.write("        ");

        String tripIdParam = request.getParameter("id");
        if(tripIdParam != null && !tripIdParam.trim().isEmpty()) {
            try {
                TripDAO tripDAO = new TripDAO();
                Trip trip = tripDAO.getTripById(tripIdParam); // Pass String directly
                
                if(trip != null) {
                    DriverVehicleDAO driverVehicleDAO = new DriverVehicleDAO();
                    DriverVehicle currentAssignment = driverVehicleDAO.getAssignmentByTripId(tripIdParam); // Pass String directly
                    
                    // Get lists for selection
                    DriverDAO driverDAO = new DriverDAO();
                    VehicleDAO vehicleDAO = new VehicleDAO();
                    
                    List<Driver> drivers = driverDAO.getAllDrivers();
                    List<Vehicle> vehicles = vehicleDAO.getAllVehicles();
                    
                    // Change this line - remove time components from formatter
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        
      out.write("\n");
      out.write("        <div class=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n");
      out.write("            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Trip ID:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getTripId() );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Course:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getCourseTitle() );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Departure:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getStartDate() != null ? formatter.format(trip.getStartDate()) : "Not set" );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Return:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getEndDate() != null ? formatter.format(trip.getEndDate()) : "Not set" );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Destination:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getDestinationId() );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <p class=\"text-gray-600\">Students:</p>\n");
      out.write("                    <p class=\"font-semibold\">");
      out.print( trip.getNumberOfStudents() );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updateAssignment\" method=\"post\" class=\"space-y-4\">\n");
      out.write("                <input type=\"hidden\" name=\"tripId\" value=\"");
      out.print( trip.getTripId() );
      out.write("\">\n");
      out.write("                <input type=\"hidden\" name=\"assignmentId\" value=\"");
      out.print( currentAssignment != null ? currentAssignment.getDriverVehicleId() : "" );
      out.write("\">\n");
      out.write("                \n");
      out.write("                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n");
      out.write("                    <div>\n");
      out.write("                        <label for=\"driverId\" class=\"block text-sm font-medium text-gray-700\">Driver</label>\n");
      out.write("                        <select id=\"driverId\" name=\"driverId\" class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\">\n");
      out.write("                            <option value=\"\">Select a driver</option>\n");
      out.write("                            ");
 for(Driver driver : drivers) { 
      out.write("\n");
      out.write("                                <option value=\"");
      out.print( driver.getDriverId() );
      out.write('"');
      out.write(' ');
      out.print( (currentAssignment != null && driver.getDriverId().equals(currentAssignment.getDriverId())) ? "selected" : "" );
      out.write(">\n");
      out.write("                                    ");
      out.print( driver.getFirstname() );
      out.write(' ');
      out.print( driver.getLastname() );
      out.write(' ');
      out.write('(');
      out.print( driver.getPhoneNumber() );
      out.write(")\n");
      out.write("                                </option>\n");
      out.write("                            ");
 } 
      out.write("\n");
      out.write("                        </select>\n");
      out.write("                    </div>\n");
      out.write("                    <div>\n");
      out.write("                        <label for=\"vehicleId\" class=\"block text-sm font-medium text-gray-700\">Vehicle</label>\n");
      out.write("                        <select id=\"vehicleId\" name=\"vehicleId\" class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\">\n");
      out.write("                            <option value=\"\">Select a vehicle</option>\n");
      out.write("                            ");
 for(Vehicle vehicle : vehicles) { 
      out.write("\n");
      out.write("                                <option value=\"");
      out.print( vehicle.getVehicleId() );
      out.write('"');
      out.write(' ');
      out.print( (currentAssignment != null && vehicle.getVehicleId().equals(currentAssignment.getVehicleId())) ? "selected" : "" );
      out.write(">\n");
      out.write("                                    ");
      out.print( vehicle.getMake() );
      out.write(' ');
      out.print( vehicle.getModel() );
      out.write(' ');
      out.write('(');
      out.print( vehicle.getPlateNumber() );
      out.write(',');
      out.write(' ');
      out.print( vehicle.getCapacity() );
      out.write(" seats)\n");
      out.write("                                </option>\n");
      out.write("                            ");
 } 
      out.write("\n");
      out.write("                        </select>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n");
      out.write("                    <div>\n");
      out.write("                        <label for=\"assignmentStart\" class=\"block text-sm font-medium text-gray-700\">Assignment Start Date</label>\n");
      out.write("                        <input type=\"date\" id=\"assignmentStart\" name=\"assignmentStart\" \n");
      out.write("                               value=\"");
      out.print( currentAssignment != null ? currentAssignment.getAssignmentStart() : trip.getStartDate() );
      out.write("\"\n");
      out.write("                               class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\">\n");
      out.write("                    </div>\n");
      out.write("                    <div>\n");
      out.write("                        <label for=\"assignmentEnd\" class=\"block text-sm font-medium text-gray-700\">Assignment End Date</label>\n");
      out.write("                        <input type=\"date\" id=\"assignmentEnd\" name=\"assignmentEnd\"\n");
      out.write("                               value=\"");
      out.print( currentAssignment != null ? currentAssignment.getAssignmentEnd() : trip.getEndDate() );
      out.write("\"\n");
      out.write("                               class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\">\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"flex justify-between pt-4\">\n");
      out.write("                    <a href=\"tripDetails.jsp?id=");
      out.print( tripIdParam );
      out.write("\" class=\"bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded\">\n");
      out.write("                        <i class=\"fas fa-arrow-left mr-1\"></i> Cancel\n");
      out.write("                    </a>\n");
      out.write("                    <button type=\"submit\" class=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">\n");
      out.write("                        <i class=\"fas fa-save mr-1\"></i> Save Assignment\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("        ");
 
                } else {
        
      out.write("\n");
      out.write("            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n");
      out.write("                <p>Trip not found with ID: ");
      out.print( tripIdParam );
      out.write("</p>\n");
      out.write("                <a href=\"viewAssignments.jsp\" class=\"text-blue-500 hover:underline\">Return to assignments</a>\n");
      out.write("            </div>\n");
      out.write("        ");

                }
            } catch(Exception e) {
        
      out.write("\n");
      out.write("            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n");
      out.write("                <p>Error: ");
      out.print( e.getMessage() );
      out.write("</p>\n");
      out.write("                <pre class=\"text-xs mt-2\">");
      out.print( e.toString() );
      out.write("</pre>\n");
      out.write("                <a href=\"viewAssignments.jsp\" class=\"text-blue-500 hover:underline\">Return to assignments</a>\n");
      out.write("            </div>\n");
      out.write("        ");

            }
        } else {
        
      out.write("\n");
      out.write("            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n");
      out.write("                <p>No trip ID provided</p>\n");
      out.write("                <a href=\"viewAssignments.jsp\" class=\"text-blue-500 hover:underline\">Return to assignments</a>\n");
      out.write("            </div>\n");
      out.write("        ");

        }
        
      out.write("\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
