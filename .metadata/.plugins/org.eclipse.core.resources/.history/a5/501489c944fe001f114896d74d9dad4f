package com.academictrip.servlet;

import com.academictrip.dao.*;
import com.academictrip.model.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.WebServlet;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;

@WebServlet("/servlet/AddTripServlet") // Changed URL pattern to avoid conflict
public class AddTripServlet extends HttpServlet {
    private static final Logger LOGGER = Logger.getLogger(AddTripServlet.class.getName());

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession();
        
        try {
            // Get the current user
            User user = (User) session.getAttribute("user");
            if (user == null) {
                throw new ServletException("User not logged in");
            }
            
            // Parse form data
            String startDateStr = request.getParameter("startDate");
            String endDateStr = request.getParameter("endDate");
            String inchargeFirstName = request.getParameter("inchargeFirstName");
            String inchargeLastName = request.getParameter("inchargeLastName");
            String inchargeEmail = request.getParameter("inchargeEmail");
            String inchargePhone = request.getParameter("inchargePhone");
            String facultyId = request.getParameter("faculty");
            String courseId = request.getParameter("course");
            String destinationId = request.getParameter("destination");
            String studentsCountStr = request.getParameter("studentsCount");
            String purpose = request.getParameter("purpose");
            String notes = request.getParameter("notes");
            
            // Validate required fields
            if (startDateStr == null || startDateStr.trim().isEmpty() ||
                endDateStr == null || endDateStr.trim().isEmpty() ||
                inchargeFirstName == null || inchargeFirstName.trim().isEmpty() ||
                inchargeLastName == null || inchargeLastName.trim().isEmpty() ||
                inchargeEmail == null || inchargeEmail.trim().isEmpty() ||
                inchargePhone == null || inchargePhone.trim().isEmpty() ||
                facultyId == null || facultyId.trim().isEmpty() ||
                courseId == null || courseId.trim().isEmpty() ||
                destinationId == null || destinationId.trim().isEmpty() ||
                studentsCountStr == null || studentsCountStr.trim().isEmpty()) {
                
                throw new ServletException("All required fields must be filled");
            }
            
            // Parse dates and integers
            LocalDate startDate;
            LocalDate endDate;
            int studentsCount;
            
            try {
                startDate = LocalDate.parse(startDateStr);
                endDate = LocalDate.parse(endDateStr);
                studentsCount = Integer.parseInt(studentsCountStr);
            } catch (Exception e) {
                throw new ServletException("Invalid date or number format: " + e.getMessage());
            }
            
            // Validate date range
            if (startDate.isAfter(endDate)) {
                throw new ServletException("End date must be after start date");
            }
            
            // Create trip object and save to database
            // This is where your existing code would be
            
            LOGGER.info("Trip created successfully for user: " + user.getId());
            
            // Redirect to success page
            session.setAttribute("successMessage", "Trip created successfully");
            response.sendRedirect(request.getContextPath() + "/lecturer/dashboard.jsp");
            
        } catch (Exception e) {
            LOGGER.log(Level.SEVERE, "Error creating trip", e);
            
            // Set detailed error message
            request.setAttribute("javax.servlet.error.message", e.getMessage());
            request.setAttribute("errorDetails", e.toString());
            request.setAttribute("errorStackTrace", getStackTraceAsString(e));
            
            // Forward to error page
            request.getRequestDispatcher("/error.jsp").forward(request, response);
        }
    }
    
    private String getStackTraceAsString(Throwable throwable) {
        java.io.StringWriter sw = new java.io.StringWriter();
        java.io.PrintWriter pw = new java.io.PrintWriter(sw);
        throwable.printStackTrace(pw);
        return sw.toString();
    }
}
