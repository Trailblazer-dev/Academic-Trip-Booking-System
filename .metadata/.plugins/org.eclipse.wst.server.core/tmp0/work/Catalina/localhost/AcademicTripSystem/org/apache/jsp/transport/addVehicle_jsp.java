/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-25 08:20:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.time.Year;

public final class addVehicle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.Year");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Add New Vehicle | Academic Trip System</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/styles.css\">\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-50\">\n");
      out.write("    <div class=\"page-wrapper\">\n");
      out.write("        <!-- Include standardized header -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/transportHeader.jsp", out, false);
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=\"main-content\">\n");
      out.write("            <div class=\"max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n");
      out.write("                <div class=\"bg-white shadow-xl rounded-lg overflow-hidden\">\n");
      out.write("                    <!-- Header -->\n");
      out.write("                    <div class=\"bg-primary px-6 py-4\">\n");
      out.write("                        <h1 class=\"text-2xl font-bold text-white\">\n");
      out.write("                            <i class=\"fas fa-bus mr-2\"></i>Add New Vehicle\n");
      out.write("                        </h1>\n");
      out.write("                        <p class=\"text-blue-100 mt-1\">Enter vehicle details below</p>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    <!-- Alert Messages -->\n");
      out.write("                    ");
 if (request.getAttribute("errorMessage") != null) { 
      out.write(" \n");
      out.write("                        <div class=\"bg-red-50 border-l-4 border-red-500 p-4 m-4\" id=\"errorAlert\">\n");
      out.write("                            <div class=\"flex\">\n");
      out.write("                                <div class=\"flex-shrink-0\">\n");
      out.write("                                    <i class=\"fas fa-exclamation-circle text-red-500\"></i>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"ml-3\">\n");
      out.write("                                    <p class=\"text-red-700\">");
      out.print( request.getAttribute("errorMessage") );
      out.write("</p>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"ml-auto\">\n");
      out.write("                                    <button onclick=\"document.getElementById('errorAlert').style.display='none'\" class=\"text-red-500\">\n");
      out.write("                                        <i class=\"fas fa-times\"></i>\n");
      out.write("                                    </button>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                    \n");
      out.write("                    <!-- Vehicle Form -->\n");
      out.write("                    <form id=\"addVehicleForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/addVehicleAction\" method=\"post\" class=\"p-6\">\n");
      out.write("                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n");
      out.write("                            <!-- Make -->\n");
      out.write("                            <div class=\"mb-6\">\n");
      out.write("                                <label for=\"make\" class=\"block text-sm font-medium text-gray-700 mb-1\">Make <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                <input type=\"text\" id=\"make\" name=\"make\" required\n");
      out.write("                                       class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n");
      out.write("                                       placeholder=\"Enter vehicle make (e.g., Toyota)\">\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Model -->\n");
      out.write("                            <div class=\"mb-6\">\n");
      out.write("                                <label for=\"model\" class=\"block text-sm font-medium text-gray-700 mb-1\">Model <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                <input type=\"text\" id=\"model\" name=\"model\" required\n");
      out.write("                                       class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n");
      out.write("                                       placeholder=\"Enter vehicle model (e.g., Coaster)\">\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n");
      out.write("                            <!-- Year -->\n");
      out.write("                            <div>\n");
      out.write("                                <label for=\"year\" class=\"block text-sm font-medium text-gray-700 mb-1\">Year <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                <select id=\"year\" name=\"year\" required\n");
      out.write("                                        class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n");
      out.write("                                    <option value=\"\">Select Year</option>\n");
      out.write("                                    ");
 
                                        int currentYear = Year.now().getValue();
                                        for (int year = currentYear; year >= currentYear - 20; year--) { 
                                    
      out.write("\n");
      out.write("                                        <option value=\"");
      out.print( year );
      out.write('"');
      out.write('>');
      out.print( year );
      out.write("</option>\n");
      out.write("                                    ");
 } 
      out.write("\n");
      out.write("                                </select>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Capacity -->\n");
      out.write("                            <div>\n");
      out.write("                                <label for=\"capacity\" class=\"block text-sm font-medium text-gray-700 mb-1\">Capacity <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                <input type=\"number\" id=\"capacity\" name=\"capacity\" required min=\"1\" max=\"100\"\n");
      out.write("                                       class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n");
      out.write("                                       placeholder=\"Number of seats\">\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Registration -->\n");
      out.write("                            <div>\n");
      out.write("                                <label for=\"registration\" class=\"block text-sm font-medium text-gray-700 mb-1\">Registration Number <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                <input type=\"text\" id=\"registration\" name=\"registration\" required\n");
      out.write("                                       class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n");
      out.write("                                       placeholder=\"Enter plate number\">\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <!-- Buttons -->\n");
      out.write("                        <div class=\"flex justify-between mt-8\">\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageVehicles.jsp\" \n");
      out.write("                               class=\"bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-md inline-flex items-center transition-colors\">\n");
      out.write("                                <i class=\"fas fa-arrow-left mr-2\"></i> Cancel\n");
      out.write("                            </a>\n");
      out.write("                            <button type=\"submit\" class=\"bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-6 rounded-md inline-flex items-center transition-colors\">\n");
      out.write("                                <i class=\"fas fa-save mr-2\"></i> Save Vehicle\n");
      out.write("                            </button>\n");
      out.write("                        </div>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <footer>\n");
      out.write("            <div class=\"footer-content\">\n");
      out.write("                <p>&copy; 2023 Academic Trip System. All rights reserved.</p>\n");
      out.write("                <p class=\"mt-2 text-sm text-gray-300\">Transport Management Module</p>\n");
      out.write("            </div>\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Form validation\n");
      out.write("            document.getElementById('addVehicleForm').addEventListener('submit', function(e) {\n");
      out.write("                const make = document.getElementById('make').value.trim();\n");
      out.write("                const model = document.getElementById('model').value.trim();\n");
      out.write("                const year = document.getElementById('year').value;\n");
      out.write("                const capacity = document.getElementById('capacity').value.trim();\n");
      out.write("                const registration = document.getElementById('registration').value.trim();\n");
      out.write("                \n");
      out.write("                if (!make || !model || !year || !capacity || !registration) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Please fill in all required fields');\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
