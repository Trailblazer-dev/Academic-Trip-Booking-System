/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 23:13:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.dao.*;
import com.academictrip.model.*;
import java.util.*;
import java.time.format.*;

public final class editAssignment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(10);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.time.format");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.academictrip.dao");
    _jspx_imports_packages.add("com.academictrip.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    // Get trip ID from parameter
    String tripIdParam = request.getParameter("id");
    if (tripIdParam == null) {
        tripIdParam = request.getParameter("tripId"); // Alternative parameter name
    }
    
    Trip trip = null;
    DriverVehicle currentAssignment = null;
    Driver currentDriver = null;
    Vehicle currentVehicle = null;
    
    // Get available drivers and vehicles lists
    DriverDAO driverDAO = new DriverDAO();
    VehicleDAO vehicleDAO = new VehicleDAO();
    
    List<Driver> availableDrivers = new ArrayList<>();
    List<Vehicle> availableVehicles = new ArrayList<>();
    
    // Date formatter for display
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    
    // Get success or error messages from session
    String successMessage = (String) session.getAttribute("successMessage");
    String errorMessage = (String) session.getAttribute("errorMessage");
    // Clear messages after retrieving
    session.removeAttribute("successMessage");
    session.removeAttribute("errorMessage");
    
    if(tripIdParam != null && !tripIdParam.trim().isEmpty()) {
        try {
            TripDAO tripDAO = new TripDAO();
            trip = tripDAO.getTripById(tripIdParam);
            
            if(trip != null) {
                DriverVehicleDAO driverVehicleDAO = new DriverVehicleDAO();
                currentAssignment = driverVehicleDAO.getAssignmentById(trip.getDriverVehicleId());
                
                if(currentAssignment != null) {
                    // Get the currently assigned driver and vehicle
                    if(currentAssignment.getDriverId() != null) {
                        currentDriver = driverDAO.getDriverById(currentAssignment.getDriverId());
                    }
                    
                    if(currentAssignment.getVehicleId() != null) {
                        currentVehicle = vehicleDAO.getVehicleById(currentAssignment.getVehicleId());
                    }
                    
                    // Get all drivers - don't filter by availability
                    availableDrivers = driverDAO.getAllDrivers();
                    
                    // Get all vehicles - don't filter by availability
                    availableVehicles = vehicleDAO.getAllVehicles();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            request.setAttribute("errorMessage", "Error retrieving trip details: " + e.getMessage());
        }
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Edit Assignment | Academic Trip System</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/styles.css\">\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-50\">\n");
      out.write("    <div class=\"page-wrapper\">\n");
      out.write("        <!-- Include standardized header -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/transportHeader.jsp", out, false);
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=\"main-content\">\n");
      out.write("            <div class=\"max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n");
      out.write("                ");
 if(trip == null || currentAssignment == null) { 
      out.write("\n");
      out.write("                    <div class=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\n");
      out.write("                        <div class=\"flex\">\n");
      out.write("                            <div class=\"flex-shrink-0\">\n");
      out.write("                                <i class=\"fas fa-exclamation-circle text-red-500\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"ml-3\">\n");
      out.write("                                <p class=\"text-red-700\">\n");
      out.write("                                    Trip or assignment not found. Please check the ID and try again.\n");
      out.write("                                </p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    <div class=\"text-center py-8\">\n");
      out.write("                        <i class=\"fas fa-search text-gray-300 text-4xl mb-4\"></i>\n");
      out.write("                        <p class=\"text-xl text-gray-400\">The requested assignment could not be found</p>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/viewAssignments.jsp\" class=\"inline-block mt-4 bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-md\">\n");
      out.write("                            View All Assignments\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                ");
 } else { 
      out.write("\n");
      out.write("                    <div class=\"bg-white shadow-xl rounded-lg overflow-hidden\">\n");
      out.write("                        <!-- Header -->\n");
      out.write("                        <div class=\"bg-primary px-6 py-4\">\n");
      out.write("                            <h1 class=\"text-2xl font-bold text-white\">\n");
      out.write("                                <i class=\"fas fa-edit mr-2\"></i>Edit Transport Assignment\n");
      out.write("                            </h1>\n");
      out.write("                            <p class=\"text-blue-100 mt-1\">Update driver and vehicle for trip #");
      out.print( trip.getTripId() );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <!-- Alert Messages -->\n");
      out.write("                        ");
 if (successMessage != null && !successMessage.isEmpty()) { 
      out.write(" \n");
      out.write("                            <div class=\"bg-green-50 border-l-4 border-green-500 p-4 m-4\" id=\"successAlert\">\n");
      out.write("                                <div class=\"flex\">\n");
      out.write("                                    <div class=\"flex-shrink-0\">\n");
      out.write("                                        <i class=\"fas fa-check-circle text-green-500\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"ml-3\">\n");
      out.write("                                        <p class=\"text-green-700\">");
      out.print( successMessage );
      out.write("</p>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"ml-auto\">\n");
      out.write("                                        <button onclick=\"document.getElementById('successAlert').style.display='none'\" class=\"text-green-500\">\n");
      out.write("                                            <i class=\"fas fa-times\"></i>\n");
      out.write("                                        </button>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                        ");
 if (errorMessage != null && !errorMessage.isEmpty()) { 
      out.write(" \n");
      out.write("                            <div class=\"bg-red-50 border-l-4 border-red-500 p-4 m-4\" id=\"errorAlert\">\n");
      out.write("                                <div class=\"flex\">\n");
      out.write("                                    <div class=\"flex-shrink-0\">\n");
      out.write("                                        <i class=\"fas fa-exclamation-circle text-red-500\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"ml-3\">\n");
      out.write("                                        <p class=\"text-red-700\">");
      out.print( errorMessage );
      out.write("</p>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"ml-auto\">\n");
      out.write("                                        <button onclick=\"document.getElementById('errorAlert').style.display='none'\" class=\"text-red-500\">\n");
      out.write("                                            <i class=\"fas fa-times\"></i>\n");
      out.write("                                        </button>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                        \n");
      out.write("                        <!-- Trip Info -->\n");
      out.write("                        <div class=\"bg-blue-50 border-l-4 border-blue-500 p-4 m-4\">\n");
      out.write("                            <h2 class=\"text-lg font-semibold text-blue-800\">Trip Details</h2>\n");
      out.write("                            <div class=\"mt-2 text-blue-700\">\n");
      out.write("                                <p><strong>Trip ID:</strong> ");
      out.print( trip.getTripId() );
      out.write("</p>\n");
      out.write("                                <p><strong>Destination:</strong> ");
      out.print( trip.getDestination() );
      out.write("</p>\n");
      out.write("                                <p><strong>Dates:</strong> ");
      out.print( formatter.format(trip.getDepartureDate()));
      out.write(" to ");
      out.print( formatter.format(trip.getReturnDate()) );
      out.write("</p>\n");
      out.write("                                <p><strong>Current Assignment:</strong> \n");
      out.write("                                    ");
 if(currentDriver != null && currentVehicle != null) { 
      out.write("\n");
      out.write("                                        Driver: ");
      out.print( currentDriver.getFirstname() );
      out.write(' ');
      out.print( currentDriver.getLastname() );
      out.write(", \n");
      out.write("                                        Vehicle: ");
      out.print( currentVehicle.getMake() );
      out.write(' ');
      out.print( currentVehicle.getModel() );
      out.write(' ');
      out.write('(');
      out.print( currentVehicle.getRegistration() );
      out.write(")\n");
      out.write("                                    ");
 } else { 
      out.write("\n");
      out.write("                                        No current assignment\n");
      out.write("                                    ");
 } 
      out.write("\n");
      out.write("                                </p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <!-- Edit Assignment Form -->\n");
      out.write("                        <form id=\"editAssignmentForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/updateAssignment\" method=\"post\" class=\"p-6\">\n");
      out.write("                            <input type=\"hidden\" name=\"tripId\" value=\"");
      out.print( trip.getTripId() );
      out.write("\">\n");
      out.write("                            <input type=\"hidden\" name=\"currentAssignmentId\" value=\"");
      out.print( currentAssignment.getAssignmentId() );
      out.write("\">\n");
      out.write("                            \n");
      out.write("                            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n");
      out.write("                                <!-- Driver Selection -->\n");
      out.write("                                <div class=\"mb-6\">\n");
      out.write("                                    <label for=\"driverId\" class=\"block text-sm font-medium text-gray-700 mb-1\">Select Driver <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                    <select id=\"driverId\" name=\"driverId\" class=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm\" required>\n");
      out.write("                                        <option value=\"\">-- Select a Driver --</option>\n");
      out.write("                                        ");
 for (Driver driver : availableDrivers) { 
                                            boolean isCurrentDriver = currentDriver != null && driver.getDriverId().equals(currentDriver.getDriverId());
                                        
      out.write("\n");
      out.write("                                            <option value=\"");
      out.print( driver.getDriverId() );
      out.write('"');
      out.write(' ');
      out.print( isCurrentDriver ? "selected" : "" );
      out.write(">\n");
      out.write("                                                ");
      out.print( driver.getFirstname() );
      out.write(' ');
      out.print( driver.getLastname() );
      out.print( isCurrentDriver ? " (Current)" : "" );
      out.write("\n");
      out.write("                                            </option>\n");
      out.write("                                        ");
 } 
      out.write("\n");
      out.write("                                    </select>\n");
      out.write("                                </div>\n");
      out.write("                                \n");
      out.write("                                <!-- Vehicle Selection -->\n");
      out.write("                                <div class=\"mb-6\">\n");
      out.write("                                    <label for=\"vehicleId\" class=\"block text-sm font-medium text-gray-700 mb-1\">Select Vehicle <span class=\"text-red-500\">*</span></label>\n");
      out.write("                                    <select id=\"vehicleId\" name=\"vehicleId\" class=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm\" required>\n");
      out.write("                                        <option value=\"\">-- Select a Vehicle --</option>\n");
      out.write("                                        ");
 for (Vehicle vehicle : availableVehicles) { 
                                            boolean isCurrentVehicle = currentVehicle != null && vehicle.getVehicleId().equals(currentVehicle.getVehicleId());
                                        
      out.write("\n");
      out.write("                                            <option value=\"");
      out.print( vehicle.getVehicleId() );
      out.write('"');
      out.write(' ');
      out.print( isCurrentVehicle ? "selected" : "" );
      out.write(">\n");
      out.write("                                                ");
      out.print( vehicle.getMake() );
      out.write(' ');
      out.print( vehicle.getModel() );
      out.write(' ');
      out.write('(');
      out.print( vehicle.getRegistration() );
      out.write(')');
      out.print( isCurrentVehicle ? " (Current)" : "" );
      out.write("\n");
      out.write("                                            </option>\n");
      out.write("                                        ");
 } 
      out.write("\n");
      out.write("                                    </select>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Assignment Dates -->\n");
      out.write("                            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n");
      out.write("                                <div>\n");
      out.write("                                    <label for=\"assignmentStart\" class=\"block text-sm font-medium text-gray-700 mb-1\">Assignment Start Date</label>\n");
      out.write("                                    <input type=\"date\" id=\"assignmentStart\" name=\"assignmentStart\" \n");
      out.write("                                           value=\"");
      out.print( formatter.format(trip.getDepartureDate()) );
      out.write("\"\n");
      out.write("                                           class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n");
      out.write("                                </div>\n");
      out.write("                                <div>\n");
      out.write("                                    <label for=\"assignmentEnd\" class=\"block text-sm font-medium text-gray-700 mb-1\">Assignment End Date</label>\n");
      out.write("                                    <input type=\"date\" id=\"assignmentEnd\" name=\"assignmentEnd\" \n");
      out.write("                                           value=\"");
      out.print( formatter.format(trip.getReturnDate()) );
      out.write("\"\n");
      out.write("                                           class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Additional Notes -->\n");
      out.write("                            <div class=\"mb-6\">\n");
      out.write("                                <label for=\"notes\" class=\"block text-sm font-medium text-gray-700 mb-1\">Additional Notes</label>\n");
      out.write("                                <textarea id=\"notes\" name=\"notes\" rows=\"3\" \n");
      out.write("                                          class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n");
      out.write("                                          placeholder=\"Any special instructions or notes about this assignment\"></textarea>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Buttons -->\n");
      out.write("                            <div class=\"flex justify-between mt-8\">\n");
      out.write("                                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/tripDetails.jsp?id=");
      out.print( trip.getTripId() );
      out.write("\" \n");
      out.write("                                   class=\"bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-md inline-flex items-center transition-colors\">\n");
      out.write("                                    <i class=\"fas fa-arrow-left mr-2\"></i> Back to Trip Details\n");
      out.write("                                </a>\n");
      out.write("                                <button type=\"submit\" class=\"bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-6 rounded-md inline-flex items-center transition-colors\">\n");
      out.write("                                    <i class=\"fas fa-save mr-2\"></i> Update Assignment\n");
      out.write("                                </button>\n");
      out.write("                            </div>\n");
      out.write("                        </form>\n");
      out.write("                    </div>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <footer>\n");
      out.write("            <div class=\"footer-content\">\n");
      out.write("                <p>&copy; 2023 Academic Trip System. All rights reserved.</p>\n");
      out.write("                <p class=\"mt-2 text-sm text-gray-300\">Transport Management Module</p>\n");
      out.write("            </div>\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Auto-hide alerts after 5 seconds\n");
      out.write("            setTimeout(function() {\n");
      out.write("                const alerts = document.querySelectorAll('#successAlert, #errorAlert');\n");
      out.write("                alerts.forEach(alert => {\n");
      out.write("                    if (alert) alert.style.display = 'none';\n");
      out.write("                });\n");
      out.write("            }, 5000);\n");
      out.write("            \n");
      out.write("            // Form validation\n");
      out.write("            document.getElementById('editAssignmentForm').addEventListener('submit', function(e) {\n");
      out.write("                const driverId = document.getElementById('driverId').value;\n");
      out.write("                const vehicleId = document.getElementById('vehicleId').value;\n");
      out.write("                \n");
      out.write("                if (!driverId || !vehicleId) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Please select both a driver and vehicle.');\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
