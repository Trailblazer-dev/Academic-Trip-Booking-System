/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 17:31:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.model.*;
import com.academictrip.dao.*;
import java.time.format.DateTimeFormatter;

public final class tripDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.academictrip.dao");
    _jspx_imports_packages.add("com.academictrip.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Trip Details | Academic Trip System</title>\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-50\">\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/transportHeader.jsp", out, false);
      out.write("\n");
      out.write("    \n");
      out.write("    <div class=\"container mx-auto px-4 py-6\">\n");
      out.write("        <h1 class=\"text-2xl font-bold mb-6\">Trip Details</h1>\n");
      out.write("        \n");
      out.write("        ");
 
        String tripIdParam = request.getParameter("id");
        if(tripIdParam != null && !tripIdParam.isEmpty()) {
            try {
                TripDAO tripDAO = new TripDAO();
                Trip trip = tripDAO.getTripById(tripIdParam);
                
                if(trip != null) {
                    DriverVehicleDAO driverVehicleDAO = new DriverVehicleDAO();
                    DriverVehicle assignment = driverVehicleDAO.getAssignmentByTripId(tripIdParam);
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    
                    // Get additional information
                    DestinationDAO destinationDAO = new DestinationDAO();
                    Destination destination = null;
                    if(trip.getDestinationId() != null) {
                        destination = destinationDAO.getDestinationById(trip.getDestinationId());
                    }
                    
                    // Get incharge group information
                    InchargeGroupDAO inchargeGroupDAO = new InchargeGroupDAO();
                    InchargeGroup inchargeGroup = null;
                    Incharge incharge = null;
                    if(trip.getInchargeGroupId() != null) {
                        inchargeGroup = inchargeGroupDAO.getInchargeGroupById(trip.getInchargeGroupId());
                        if(inchargeGroup != null) {
                            InchargeDAO inchargeDAO = new InchargeDAO();
                            incharge = inchargeDAO.getInchargeById(inchargeGroup.getInchargeId());
                        }
                    }
                    
                    // Get trip group and course information
                    TripGroup tripGroup = null;
                    Course course = null;
                    int studentCount = 0;
                    if(inchargeGroup != null) {
                        TripGroupDAO tripGroupDAO = new TripGroupDAO();
                        tripGroup = tripGroupDAO.getGroupById(inchargeGroup.getGroupId());
                        if(tripGroup != null) {
                            studentCount = tripGroup.getStudentNumber();
                            CourseDAO courseDAO = new CourseDAO();
                            course = courseDAO.getCourseById(tripGroup.getCourseId());
                        }
                    }
                    
                    // Get driver and vehicle details if assigned
                    Driver driver = null;
                    Vehicle vehicle = null;
                    if(assignment != null) {
                        DriverDAO driverDAO = new DriverDAO();
                        VehicleDAO vehicleDAO = new VehicleDAO();
                        
                        if(assignment.getDriverId() != null) {
                            driver = driverDAO.getDriverById(assignment.getDriverId());
                        }
                        
                        if(assignment.getVehicleId() != null) {
                            vehicle = vehicleDAO.getVehicleById(assignment.getVehicleId());
                        }
                    }
        
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n");
      out.write("            <!-- Main Trip Information -->\n");
      out.write("            <div class=\"md:col-span-2\">\n");
      out.write("                <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n");
      out.write("                    <h2 class=\"text-xl font-bold mb-4 text-blue-800 border-b pb-2\">\n");
      out.write("                        <i class=\"fas fa-info-circle mr-2\"></i>Trip Information\n");
      out.write("                    </h2>\n");
      out.write("                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Trip ID:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( trip.getTripId() );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Trip Status:</p>\n");
      out.write("                            <p class=\"");
      out.print( trip.getDriverVehicleId() != null ? "text-green-600" : "text-yellow-600" );
      out.write(" font-semibold\">\n");
      out.write("                                ");
      out.print( trip.getDriverVehicleId() != null ? "Assigned" : "Pending Assignment" );
      out.write("\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Start Date:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( trip.getStartDate() != null ? formatter.format(trip.getStartDate()) : "Not set" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">End Date:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( trip.getEndDate() != null ? formatter.format(trip.getEndDate()) : "Not set" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Duration:</p>\n");
      out.write("                            <p class=\"font-semibold\">\n");
      out.write("                                ");
 
                                if(trip.getStartDate() != null && trip.getEndDate() != null) {
                                    long days = java.time.temporal.ChronoUnit.DAYS.between(trip.getStartDate(), trip.getEndDate()) + 1;
                                    out.print(days + " day" + (days > 1 ? "s" : ""));
                                } else {
                                    out.print("Not available");
                                }
                                
      out.write("\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Destination:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( destination != null ? destination.getName() : (trip.getDestinationId() != null ? trip.getDestinationId() : "Not specified") );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Course and Students Information -->\n");
      out.write("                <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n");
      out.write("                    <h2 class=\"text-xl font-bold mb-4 text-blue-800 border-b pb-2\">\n");
      out.write("                        <i class=\"fas fa-graduation-cap mr-2\"></i>Academic Information\n");
      out.write("                    </h2>\n");
      out.write("                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Course Name:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( course != null ? course.getCourseName() : "Not available" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Course ID:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( course != null ? course.getCourseId() : "Not available" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Student Group:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( tripGroup != null ? tripGroup.getGroupName() : "Not available" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-gray-600 font-medium\">Number of Students:</p>\n");
      out.write("                            <p class=\"font-semibold\">");
      out.print( tripGroup != null ? tripGroup.getStudentNumber() : "Not specified" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <!-- Sidebar Information -->\n");
      out.write("            <div class=\"md:col-span-1\">\n");
      out.write("                <!-- Person in Charge -->\n");
      out.write("                <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n");
      out.write("                    <h2 class=\"text-xl font-bold mb-4 text-blue-800 border-b pb-2\">\n");
      out.write("                        <i class=\"fas fa-user-tie mr-2\"></i>Person in Charge\n");
      out.write("                    </h2>\n");
      out.write("                    ");
 if(incharge != null) { 
      out.write("\n");
      out.write("                        <div class=\"flex items-center mb-3\">\n");
      out.write("                            <div class=\"bg-blue-100 p-3 rounded-full mr-3\">\n");
      out.write("                                <i class=\"fas fa-user-tie text-blue-500 text-xl\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div>\n");
      out.write("                                <p class=\"font-bold\">");
      out.print( incharge.getFirstName() );
      out.write(' ');
      out.print( incharge.getLastName() );
      out.write("</p>\n");
      out.write("                                <p class=\"text-sm text-gray-600\">Lecturer</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"space-y-2 mt-4\">\n");
      out.write("                            <div class=\"flex items-center\">\n");
      out.write("                                <i class=\"fas fa-phone text-gray-500 w-5\"></i>\n");
      out.write("                                <span class=\"ml-2\">");
      out.print( incharge.getPhoneNumber() );
      out.write("</span>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"flex items-center\">\n");
      out.write("                                <i class=\"fas fa-envelope text-gray-500 w-5\"></i>\n");
      out.write("                                <span class=\"ml-2\">");
      out.print( incharge.getEmail() );
      out.write("</span>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    ");
 } else { 
      out.write("\n");
      out.write("                        <p class=\"text-gray-500 italic\">No incharge information available</p>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Assignment Details -->\n");
      out.write("                <div class=\"bg-white rounded-lg shadow-md p-6\">\n");
      out.write("                    <h2 class=\"text-xl font-bold mb-4 text-blue-800 border-b pb-2\">\n");
      out.write("                        <i class=\"fas fa-car mr-2\"></i>Transport Assignment\n");
      out.write("                    </h2>\n");
      out.write("                    ");
 if(assignment != null && driver != null && vehicle != null) { 
      out.write("\n");
      out.write("                        <div class=\"flex items-center mb-3\">\n");
      out.write("                            <div class=\"driver-avatar mr-3\">\n");
      out.write("                                <i class=\"fas fa-user\"></i>\n");
      out.write("                            </div>\n");
      out.write("                            <div>\n");
      out.write("                                <h3 class=\"font-medium text-lg\">");
      out.print( driver.getFirstname() );
      out.write(' ');
      out.print( driver.getLastname() );
      out.write("</h3>\n");
      out.write("                                <p class=\"text-sm text-gray-600\">");
      out.print( driver.getPhoneNumber() );
      out.write("</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div class=\"flex items-center mb-4\">\n");
      out.write("                            <div class=\"vehicle-type \">Bus</div>\n");
      out.write("                            <div class=\"ml-2\">\n");
      out.write("                                <h3 class=\"font-medium\">");
      out.print( vehicle.getMake() );
      out.write(' ');
      out.print( vehicle.getModel() );
      out.write("</h3>\n");
      out.write("                                <p class=\"text-sm text-gray-600\">");
      out.print( vehicle.getPlateNumber() );
      out.write(" (Capacity: ");
      out.print( vehicle.getCapacity() );
      out.write(")</p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div class=\"space-y-2 border-t pt-3\">\n");
      out.write("                            <p><span class=\"font-medium\">Assignment Period:</span></p>\n");
      out.write("                            <p>");
      out.print( assignment.getAssignmentStart() != null ? formatter.format(assignment.getAssignmentStart()) : "Not specified" );
      out.write("\n");
      out.write("                               to \n");
      out.write("                               ");
      out.print( assignment.getAssignmentEnd() != null ? formatter.format(assignment.getAssignmentEnd()) : "Not specified" );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div class=\"mt-4\">\n");
      out.write("                            <a href=\"editAssignment.jsp?id=");
      out.print( trip.getTripId() );
      out.write("\" class=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-md inline-flex items-center\">\n");
      out.write("                                <i class=\"fas fa-edit mr-2\"></i> Edit Assignment\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                    ");
 } else { 
      out.write("\n");
      out.write("                        <div class=\"bg-yellow-50 border-l-4 border-yellow-400 p-4\">\n");
      out.write("                            <p class=\"text-yellow-700\">No transport resources assigned yet.</p>\n");
      out.write("                            <a href=\"assignResources.jsp?tripId=");
      out.print( trip.getTripId() );
      out.write("\" class=\"mt-3 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-md inline-flex items-center\">\n");
      out.write("                                <i class=\"fas fa-plus mr-2\"></i> Assign Resources\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Action Buttons -->\n");
      out.write("        <div class=\"flex justify-between mt-6\">\n");
      out.write("            <a href=\"viewAssignments.jsp\" class=\"bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-md inline-flex items-center\">\n");
      out.write("                <i class=\"fas fa-arrow-left mr-2\"></i> Back to Assignments\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <div>\n");
      out.write("                ");
 if(trip.getDriverVehicleId() == null) { 
      out.write("\n");
      out.write("                    <a href=\"assignResources.jsp?tripId=");
      out.print( trip.getTripId() );
      out.write("\" class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded-md inline-flex items-center\">\n");
      out.write("                        <i class=\"fas fa-plus mr-2\"></i> Assign Resources\n");
      out.write("                    </a>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    ");
 
            } else {
    
      out.write("\n");
      out.write("        <div class=\"bg-red-100 border-l-4 border-red-500 p-4 mb-4\">\n");
      out.write("            <p class=\"text-red-700\">Trip not found.</p>\n");
      out.write("            <a href=\"viewAssignments.jsp\" class=\"mt-3 text-blue-500 hover:underline\">Back to assignments</a>\n");
      out.write("        </div>\n");
      out.write("    ");
 
            }
        } catch (Exception e) {
    
      out.write("\n");
      out.write("        <div class=\"bg-red-100 border-l-4 border-red-500 p-4 mb-4\">\n");
      out.write("            <p class=\"text-red-700\">Error retrieving trip details: ");
      out.print( e.getMessage() );
      out.write("</p>\n");
      out.write("            <pre class=\"text-xs mt-2 text-red-600\">");
      out.print( e.toString() );
      out.write("</pre>\n");
      out.write("            <a href=\"viewAssignments.jsp\" class=\"mt-3 text-blue-500 hover:underline\">Back to assignments</a>\n");
      out.write("        </div>\n");
      out.write("    ");
 
        }
    } else {
    
      out.write("\n");
      out.write("        <div class=\"bg-red-100 border-l-4 border-red-500 p-4 mb-4\">\n");
      out.write("            <p class=\"text-red-700\">Invalid trip ID.</p>\n");
      out.write("            <a href=\"viewAssignments.jsp\" class=\"mt-3 text-blue-500 hover:underline\">Back to assignments</a>\n");
      out.write("        </div>\n");
      out.write("    ");
 
        }
    
      out.write("\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../includes/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
