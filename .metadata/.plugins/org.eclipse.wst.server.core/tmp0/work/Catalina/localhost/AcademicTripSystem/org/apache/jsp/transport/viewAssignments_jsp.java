/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-03-10 21:43:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.academictrip.dao.TripDAO;
import com.academictrip.model.Trip;
import com.academictrip.dao.DriverVehicleDAO;
import com.academictrip.model.DriverVehicle;
import com.academictrip.dao.DriverDAO;
import com.academictrip.model.Driver;
import com.academictrip.dao.VehicleDAO;
import com.academictrip.model.Vehicle;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.time.format.DateTimeFormatter;
import com.academictrip.model.User;
import com.academictrip.dao.*;
import com.academictrip.model.*;
import java.util.*;
import java.time.format.*;
import com.academictrip.model.User;

public final class viewAssignments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/includes/footer.jsp", Long.valueOf(1741635984030L));
    _jspx_dependants.put("/includes/transportHeader.jsp", Long.valueOf(1741638226626L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(10);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.time.format");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.academictrip.dao");
    _jspx_imports_packages.add("com.academictrip.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(18);
    _jspx_imports_classes.add("com.academictrip.model.DriverVehicle");
    _jspx_imports_classes.add("com.academictrip.model.Trip");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.academictrip.dao.VehicleDAO");
    _jspx_imports_classes.add("com.academictrip.model.Vehicle");
    _jspx_imports_classes.add("com.academictrip.dao.DriverDAO");
    _jspx_imports_classes.add("com.academictrip.dao.TripDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.academictrip.model.Driver");
    _jspx_imports_classes.add("com.academictrip.dao.DriverVehicleDAO");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("com.academictrip.model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    // Remove duplicate declarations of pageName and currentUser
    // They are already declared in transportHeader.jsp
    
    // Get filter parameters
    String statusFilter = request.getParameter("status");
    String destinationFilter = request.getParameter("destination");
    String startDateParam = request.getParameter("startDate");
    String endDateParam = request.getParameter("endDate");
    
    // CRITICAL FIX: Initialize the lists directly to avoid method ambiguity 
    List<Trip> trips = new ArrayList<>();
    List<Trip> assignedTrips = new ArrayList<>();
    
    // FIXED: Move tripDAO declaration outside of try block so it's accessible later
    TripDAO tripDAO = new TripDAO();
    
    try {
        // Get assignments data with filters
        
        // Only filter by destination since we'll handle status filtering client-side
        if (destinationFilter != null && !destinationFilter.isEmpty()) {
            trips = tripDAO.getTripsWithAssignmentsByFilters(null, destinationFilter);
        } else {
            // Default to all trips if no filters
            trips = tripDAO.getAllTrips();
        }
        
        // Only execute date filtering if date params are provided
        if (startDateParam != null && !startDateParam.isEmpty() || 
            endDateParam != null && !endDateParam.isEmpty()) {
            assignedTrips = tripDAO.getTripsWithAssignmentsByDate(startDateParam, endDateParam);
        }
    } catch (Exception e) {
        // Log the error to help with debugging
        e.printStackTrace();
        // Set an attribute so we can display it in the page if needed
        request.setAttribute("error", e.getMessage());
    }
    
    // Prepare DAOs for additional data
    DriverVehicleDAO dvDAO = new DriverVehicleDAO();
    DriverDAO driverDAO = new DriverDAO();
    VehicleDAO vehicleDAO = new VehicleDAO();
    
    // Cache for driver-vehicle assignments
    Map<String, DriverVehicle> assignmentCache = new HashMap<>();
    Map<String, Driver> driverCache = new HashMap<>();
    Map<String, Vehicle> vehicleCache = new HashMap<>();
    
    // Date formatter
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMM d, yyyy");
    
    // Now tripDAO is accessible outside the try block
    List<String> destinations = tripDAO.getUniqueDestinations();

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\" class=\"h-full\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>View Assignments | Academic Trip System</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("</head>\n");
      out.write("<body class=\"flex flex-col h-full bg-gray-50\">\n");
      out.write("    <!-- Include header -->\n");
      out.write("    ");
      out.write('\n');
      out.write('\n');

    // Define these variables here so they're available to all pages that include this header
    String pageName = request.getRequestURI().substring(request.getRequestURI().lastIndexOf("/") + 1);
    User currentUser = (User) session.getAttribute("user");
    
    if (currentUser == null) {
        response.sendRedirect(request.getContextPath() + "/login.jsp");
        return;
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<div class=\"bg-indigo-800 shadow-md\">\n");
      out.write("    <div class=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-8\">\n");
      out.write("        <div class=\"relative flex items-center justify-between h-16\">\n");
      out.write("            <!-- Mobile menu button -->\n");
      out.write("            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n");
      out.write("                <button type=\"button\" id=\"mobile-menu-button\"\n");
      out.write("                        class=\"inline-flex items-center justify-center p-2 rounded-md text-indigo-200 hover:text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n");
      out.write("                    <span class=\"sr-only\">Open main menu</span>\n");
      out.write("                    <i class=\"fas fa-bars text-xl\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <!-- Logo and site name -->\n");
      out.write("            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n");
      out.write("                <div class=\"flex-shrink-0 flex items-center\">\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dashboard.jsp\" class=\"flex items-center\">\n");
      out.write("                        <i class=\"fas fa-bus-alt text-white text-2xl\"></i>\n");
      out.write("                        <span class=\"ml-2 text-white font-bold text-lg hidden md:block\">ATS Transport</span>\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Desktop Navigation -->\n");
      out.write("                <div class=\"hidden sm:block sm:ml-6\">\n");
      out.write("                    <nav class=\"flex space-x-1\">\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/dashboard.jsp\" \n");
      out.write("                           class=\"px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-indigo-600 flex items-center transition-colors ");
      out.print( pageName.equals("dashboard.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                            <i class=\"fas fa-tachometer-alt mr-1\"></i> Dashboard\n");
      out.write("                        </a>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageDrivers.jsp\" \n");
      out.write("                           class=\"px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-indigo-600 flex items-center transition-colors ");
      out.print( pageName.equals("manageDrivers.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                            <i class=\"fas fa-user-tie mr-1\"></i> Drivers\n");
      out.write("                        </a>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageVehicles.jsp\" \n");
      out.write("                           class=\"px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-indigo-600 flex items-center transition-colors ");
      out.print( pageName.equals("manageVehicles.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                            <i class=\"fas fa-car mr-1\"></i> Vehicles\n");
      out.write("                        </a>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/assignResources.jsp\" \n");
      out.write("                           class=\"px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-indigo-600 flex items-center transition-colors ");
      out.print( pageName.equals("assignResources.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                            <i class=\"fas fa-clipboard-list mr-1\"></i> Assign\n");
      out.write("                        </a>\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/viewAssignments.jsp\" \n");
      out.write("                           class=\"px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-indigo-600 flex items-center transition-colors ");
      out.print( pageName.equals("viewAssignments.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                            <i class=\"fas fa-list-alt mr-1\"></i> Assignments\n");
      out.write("                        </a>\n");
      out.write("                    </nav>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <!-- User Menu -->\n");
      out.write("            <div class=\"hidden md:block\">\n");
      out.write("                <div class=\"flex items-center\">\n");
      out.write("                    <div class=\"relative ml-3\">\n");
      out.write("                        <button type=\"button\" \n");
      out.write("                                class=\"max-w-xs flex items-center text-sm rounded-full text-white focus:outline-none transition-colors group\"\n");
      out.write("                                id=\"userMenuButton\" \n");
      out.write("                                onclick=\"document.getElementById('userDropdown').classList.toggle('hidden')\">\n");
      out.write("                            <span class=\"bg-indigo-600 p-2 rounded-lg group-hover:bg-indigo-700\">\n");
      out.write("                                <i class=\"fas fa-user-circle text-xl mr-2\"></i>\n");
      out.write("                                ");
 if(currentUser != null) { 
      out.write("\n");
      out.write("                                ");
      out.print( currentUser.getUsername() );
      out.write("\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                                <i class=\"fas fa-chevron-down ml-1 text-xs\"></i>\n");
      out.write("                            </span>\n");
      out.write("                        </button>\n");
      out.write("                        \n");
      out.write("                        <!-- Profile dropdown panel -->\n");
      out.write("                        <div id=\"userDropdown\" class=\"hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\">\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">\n");
      out.write("                                <i class=\"fas fa-user mr-2\"></i> Your Profile\n");
      out.write("                            </a>\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/settings.jsp\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">\n");
      out.write("                                <i class=\"fas fa-cog mr-2\"></i> Settings\n");
      out.write("                            </a>\n");
      out.write("                            <hr class=\"my-1\">\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">\n");
      out.write("                                <i class=\"fas fa-sign-out-alt mr-2\"></i> Sign out\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Mobile menu, show/hide based on menu state -->\n");
      out.write("    <div class=\"sm:hidden hidden\" id=\"mobile-menu\">\n");
      out.write("        <div class=\"px-2 pt-2 pb-3 space-y-1 bg-indigo-800 border-t border-indigo-700\">\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/dashboard.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors ");
      out.print( pageName.equals("dashboard.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-tachometer-alt mr-2\"></i> Dashboard\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageDrivers.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors ");
      out.print( pageName.equals("manageDrivers.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-user-tie mr-2\"></i> Manage Drivers\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/manageVehicles.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors ");
      out.print( pageName.equals("manageVehicles.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-car mr-2\"></i> Manage Vehicles\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/assignResources.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors ");
      out.print( pageName.equals("assignResources.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-clipboard-list mr-2\"></i> Assign Resources\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/transport/viewAssignments.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors ");
      out.print( pageName.equals("viewAssignments.jsp") ? "bg-indigo-700" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-list-alt mr-2\"></i> View Assignments\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <hr class=\"border-indigo-600 my-2\">\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors\">\n");
      out.write("                <i class=\"fas fa-user mr-2\"></i> Your Profile\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/settings.jsp\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors\">\n");
      out.write("                <i class=\"fas fa-cog mr-2\"></i> Settings\n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" \n");
      out.write("               class=\"block px-3 py-2 rounded-md text-base font-medium text-white hover:bg-indigo-600 transition-colors\">\n");
      out.write("                <i class=\"fas fa-sign-out-alt mr-2\"></i> Sign out\n");
      out.write("            </a>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Toggle mobile menu\n");
      out.write("    document.getElementById('mobile-menu-button').addEventListener('click', function() {\n");
      out.write("        document.getElementById('mobile-menu').classList.toggle('hidden');\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("    // Close dropdown when clicking outside\n");
      out.write("    document.addEventListener('click', function(event) {\n");
      out.write("        const userMenuButton = document.getElementById('userMenuButton');\n");
      out.write("        const userDropdown = document.getElementById('userDropdown');\n");
      out.write("        \n");
      out.write("        if (userMenuButton && userDropdown && !userMenuButton.contains(event.target) && !userDropdown.contains(event.target)) {\n");
      out.write("            userDropdown.classList.add('hidden');\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"flex-grow container mx-auto px-4 sm:px-8 py-8\">\n");
      out.write("        <div class=\"mb-8\">\n");
      out.write("            <h1 class=\"text-2xl font-bold text-gray-900\">Transport Assignments</h1>\n");
      out.write("            <p class=\"mt-2 text-gray-600\">View and manage all vehicle and driver assignments for academic trips.</p>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Filters -->\n");
      out.write("        <div class=\"bg-white p-4 rounded-lg shadow mb-6\">\n");
      out.write("            <form action=\"viewAssignments.jsp\" method=\"get\" class=\"md:flex md:items-end space-y-4 md:space-y-0 md:space-x-4\">\n");
      out.write("                <div class=\"flex-1\">\n");
      out.write("                    <label for=\"destination\" class=\"block text-sm font-medium text-gray-700 mb-1\">Destination</label>\n");
      out.write("                    <select id=\"destination\" name=\"destination\" class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\">\n");
      out.write("                        <option value=\"\">All Destinations</option>\n");
      out.write("                        ");
 if (destinations != null) {
                            for (String destination : destinations) {
                                if (destination != null && !destination.isEmpty()) { 
      out.write("\n");
      out.write("                                    <option value=\"");
      out.print( destination );
      out.write('"');
      out.write(' ');
      out.print( (destination.equals(destinationFilter)) ? "selected" : "" );
      out.write('>');
      out.print( destination );
      out.write("</option>\n");
      out.write("                        ");
      }
                            }
                        } 
      out.write("\n");
      out.write("                    </select>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <!-- Keep the status filter for UI consistency but it won't be used in DB queries -->\n");
      out.write("                <div class=\"flex-1\">\n");
      out.write("                    <label for=\"status\" class=\"block text-sm font-medium text-gray-700 mb-1\">Assignment Status</label>\n");
      out.write("                    <select id=\"status\" name=\"status\" class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\">\n");
      out.write("                        <option value=\"\">Any Status</option>\n");
      out.write("                        <option value=\"assigned\" ");
      out.print( "assigned".equals(statusFilter) ? "selected" : "" );
      out.write(">Assigned</option>\n");
      out.write("                        <option value=\"unassigned\" ");
      out.print( "unassigned".equals(statusFilter) ? "selected" : "" );
      out.write(">Unassigned</option>\n");
      out.write("                        <option value=\"completed\" ");
      out.print( "completed".equals(statusFilter) ? "selected" : "" );
      out.write(">Completed</option>\n");
      out.write("                    </select>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"flex-none\">\n");
      out.write("                    <button type=\"submit\" class=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded inline-flex items-center\">\n");
      out.write("                        <i class=\"fas fa-filter mr-2\"></i> Filter\n");
      out.write("                    </button>\n");
      out.write("                    <a href=\"viewAssignments.jsp\" class=\"ml-2 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded inline-flex items-center\">\n");
      out.write("                        <i class=\"fas fa-times mr-2\"></i> Clear\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Assignments Table -->\n");
      out.write("        <div class=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n");
      out.write("            <div class=\"bg-indigo-700 px-4 py-3 sm:px-6\">\n");
      out.write("                <h2 class=\"text-lg leading-6 font-medium text-white\">Trip Assignments</h2>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"overflow-x-auto\">\n");
      out.write("                <table class=\"min-w-full divide-y divide-gray-200\">\n");
      out.write("                    <thead class=\"bg-gray-50\">\n");
      out.write("                        <tr>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Trip</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Destination</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Trip Dates</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Driver</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vehicle</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n");
      out.write("                            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n");
      out.write("                        </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody class=\"bg-white divide-y divide-gray-200\">\n");
      out.write("                        ");
 if (trips != null && !trips.isEmpty()) {
                               for (Trip trip : trips) {
                                   String driverVehicleId = trip.getDriverVehicleId();
                                   DriverVehicle assignment = null;
                                   Driver driver = null;
                                   Vehicle vehicle = null;
                                   
                                   // Get assignment details if assigned
                                   if (driverVehicleId != null && !driverVehicleId.isEmpty()) {
                                       if (assignmentCache.containsKey(driverVehicleId)) {
                                           assignment = assignmentCache.get(driverVehicleId);
                                       } else {
                                           assignment = dvDAO.getAssignmentById(driverVehicleId);
                                           if (assignment != null) {
                                               assignmentCache.put(driverVehicleId, assignment);
                                           }
                                       }
                                       
                                       // Get driver details
                                       if (assignment != null && assignment.getDriverId() != null) {
                                           String driverId = assignment.getDriverId();
                                           if (driverCache.containsKey(driverId)) {
                                               driver = driverCache.get(driverId);
                                           } else {
                                               driver = driverDAO.getDriverById(driverId);
                                               if (driver != null) {
                                                   driverCache.put(driverId, driver);
                                               }
                                           }
                                       }
                                       
                                       // Get vehicle details
                                       if (assignment != null && assignment.getVehicleId() != null) {
                                           String vehicleId = assignment.getVehicleId();
                                           if (vehicleCache.containsKey(vehicleId)) {
                                               vehicle = vehicleCache.get(vehicleId);
                                           } else {
                                               vehicle = vehicleDAO.getVehicleById(vehicleId);
                                               if (vehicle != null) {
                                                   vehicleCache.put(vehicleId, vehicle);
                                               }
                                           }
                                       }
                                   }
                                   
                                   // Determine trip status
                                   String status = (driverVehicleId == null || driverVehicleId.isEmpty()) ? "unassigned" : "assigned";
                                   if (trip.isCompleted()) status = "completed";
                        
      out.write("\n");
      out.write("                        <tr class=\"hover:bg-gray-50\">\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n");
      out.write("                                <div class=\"flex items-center\">\n");
      out.write("                                    <div class=\"flex-shrink-0 h-8 w-8 flex items-center justify-center rounded-full ");
      out.print( status.equals("unassigned") ? "bg-yellow-100" : (status.equals("completed") ? "bg-green-100" : "bg-blue-100") );
      out.write("\">\n");
      out.write("                                        <i class=\"fas ");
      out.print( status.equals("unassigned") ? "fa-exclamation" : (status.equals("completed") ? "fa-check" : "fa-bus-alt") );
      out.write(" text-sm ");
      out.print( status.equals("unassigned") ? "text-yellow-600" : (status.equals("completed") ? "text-green-600" : "text-blue-600") );
      out.write("\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"ml-3\">\n");
      out.write("                                        ");
      out.print( trip.getTripId() );
      out.write("\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n");
      out.write("                                ");
      out.print( trip.getDestination() );
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n");
      out.write("                                ");
      out.print( formatter.format(trip.getDepartureDate()) );
      out.write(" to ");
      out.print( formatter.format(trip.getReturnDate()) );
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n");
      out.write("                                ");
 if (driver != null) { 
      out.write("\n");
      out.write("                                    <div class=\"flex items-center\">\n");
      out.write("                                        <i class=\"fas fa-user-tie text-gray-400 mr-2\"></i>\n");
      out.write("                                        ");
      out.print( driver.getFullName() );
      out.write("\n");
      out.write("                                    </div>\n");
      out.write("                                ");
 } else { 
      out.write("\n");
      out.write("                                    <span class=\"text-gray-400\">Not assigned</span>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n");
      out.write("                                ");
 if (vehicle != null) { 
      out.write("\n");
      out.write("                                    <div class=\"flex items-center\">\n");
      out.write("                                        <i class=\"fas fa-car text-gray-400 mr-2\"></i>\n");
      out.write("                                        ");
      out.print( vehicle.getMake() );
      out.write(' ');
      out.print( vehicle.getModel() );
      out.write(' ');
      out.write('(');
      out.print( vehicle.getRegistration() );
      out.write(")\n");
      out.write("                                    </div>\n");
      out.write("                                ");
 } else { 
      out.write("\n");
      out.write("                                    <span class=\"text-gray-400\">Not assigned</span>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap\">\n");
      out.write("                                ");
 if (status.equals("unassigned")) { 
      out.write("\n");
      out.write("                                    <span class=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800\">Unassigned</span>\n");
      out.write("                                ");
 } else if (status.equals("completed")) { 
      out.write("\n");
      out.write("                                    <span class=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">Completed</span>\n");
      out.write("                                ");
 } else { 
      out.write("\n");
      out.write("                                    <span class=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">Assigned</span>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n");
      out.write("                                <a href=\"tripDetails.jsp?id=");
      out.print( trip.getTripId() );
      out.write("\" class=\"text-indigo-600 hover:text-indigo-900 mr-3\" title=\"View Details\">\n");
      out.write("                                    <i class=\"fas fa-eye\"></i>\n");
      out.write("                                </a>\n");
      out.write("                                \n");
      out.write("                                ");
 if (status.equals("unassigned")) { 
      out.write("\n");
      out.write("                                    <a href=\"assignResources.jsp?tripId=");
      out.print( trip.getTripId() );
      out.write("\" class=\"text-green-600 hover:text-green-900 mr-3\" title=\"Assign Resources\">\n");
      out.write("                                        <i class=\"fas fa-plus-circle\"></i>\n");
      out.write("                                    </a>\n");
      out.write("                                ");
 } else if (!status.equals("completed")) { 
      out.write("\n");
      out.write("                                    <a href=\"editAssignment.jsp?id=");
      out.print( trip.getTripId() );
      out.write("\" class=\"text-blue-600 hover:text-blue-900 mr-3\" title=\"Edit Assignment\">\n");
      out.write("                                        <i class=\"fas fa-edit\"></i>\n");
      out.write("                                    </a>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");
 }
                           } else { 
      out.write("\n");
      out.write("                        <tr>\n");
      out.write("                            <td colspan=\"7\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n");
      out.write("                                <div class=\"py-8\">\n");
      out.write("                                    <div class=\"text-center\">\n");
      out.write("                                        <i class=\"fas fa-search text-4xl text-gray-300 mb-3\"></i>\n");
      out.write("                                        <p class=\"text-gray-500 mb-1\">No assignments found matching your criteria.</p>\n");
      out.write("                                        <p class=\"text-sm text-gray-400\">Try changing your filter settings or create a new assignment.</p>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <!-- Pagination (if needed in the future) -->\n");
      out.write("            <div class=\"bg-white px-4 py-3 border-t border-gray-200 sm:px-6\">\n");
      out.write("                <div class=\"flex items-center justify-between\">\n");
      out.write("                    <div class=\"flex-1 flex justify-between sm:hidden\">\n");
      out.write("                        <a href=\"#\" class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n");
      out.write("                            Previous\n");
      out.write("                        </a>\n");
      out.write("                        <a href=\"#\" class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n");
      out.write("                            Next\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n");
      out.write("                        <div>\n");
      out.write("                            <p class=\"text-sm text-gray-700\">\n");
      out.write("                                Showing\n");
      out.write("                                <span class=\"font-medium\">");
      out.print( trips != null ? trips.size() : 0 );
      out.write("</span>\n");
      out.write("                                results\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                        <!-- Page numbers would go here -->\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Action Buttons -->\n");
      out.write("        <div class=\"mt-6 flex justify-center\">\n");
      out.write("            <a href=\"assignResources.jsp\" class=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded-lg inline-flex items-center shadow-md transition-all\">\n");
      out.write("                <i class=\"fas fa-plus-circle mr-2\"></i> Create New Assignment\n");
      out.write("            </a>\n");
      out.write("            <a href=\"dashboard.jsp\" class=\"ml-4 bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg inline-flex items-center shadow-md transition-all\">\n");
      out.write("                <i class=\"fas fa-arrow-left mr-2\"></i> Back to Dashboard\n");
      out.write("            </a>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <!-- Include footer -->\n");
      out.write("    ");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<footer class=\"bg-indigo-900 text-white mt-auto py-6\">\n");
      out.write("    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n");
      out.write("        <div class=\"md:flex md:items-center md:justify-between\">\n");
      out.write("            <div class=\"flex justify-center md:order-2 space-x-6\">\n");
      out.write("                <a href=\"#\" class=\"text-gray-300 hover:text-white\">\n");
      out.write("                    <span class=\"sr-only\">Help Center</span>\n");
      out.write("                    <i class=\"fas fa-question-circle text-xl\"></i>\n");
      out.write("                </a>\n");
      out.write("                <a href=\"#\" class=\"text-gray-300 hover:text-white\">\n");
      out.write("                    <span class=\"sr-only\">Contact Support</span>\n");
      out.write("                    <i class=\"fas fa-headset text-xl\"></i>\n");
      out.write("                </a>\n");
      out.write("                <a href=\"#\" class=\"text-gray-300 hover:text-white\">\n");
      out.write("                    <span class=\"sr-only\">Privacy Policy</span>\n");
      out.write("                    <i class=\"fas fa-shield-alt text-xl\"></i>\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"mt-8 md:mt-0 md:order-1 text-center md:text-left\">\n");
      out.write("                <p class=\"text-base text-gray-300\">&copy; ");
      out.print( java.time.Year.now().getValue() );
      out.write(" Academic Trip System. All rights reserved.</p>\n");
      out.write("                <p class=\"text-sm text-gray-400 mt-1\">Version 1.0.0</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</footer>\n");
      out.write("\n");
      out.write("<!-- Add to bottom of page to prevent FOUC (Flash of Unstyled Content) -->\n");
      out.write("<script>\n");
      out.write("    // Apply any custom theme preferences if stored\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("        // Check for any stored theme preferences and apply them\n");
      out.write("        const theme = localStorage.getItem('ats-theme');\n");
      out.write("        if (theme === 'dark') {\n");
      out.write("            // Add dark mode classes if we implement dark mode in the future\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Add any client-side JavaScript functionality here\n");
      out.write("            const destinationFilter = document.getElementById('destination');\n");
      out.write("            const statusFilter = document.getElementById('status');\n");
      out.write("            \n");
      out.write("            // Quick filter application\n");
      out.write("            destinationFilter.addEventListener('change', function() {\n");
      out.write("                if (this.value !== '') {\n");
      out.write("                    document.querySelector('form').submit();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            statusFilter.addEventListener('change', function() {\n");
      out.write("                // Apply client-side filtering for status\n");
      out.write("                filterTripsByStatus(this.value);\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Apply initial status filter if needed\n");
      out.write("            const initialStatus = statusFilter.value;\n");
      out.write("            if (initialStatus) {\n");
      out.write("                filterTripsByStatus(initialStatus);\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // Function to filter trips by status without page reload\n");
      out.write("            function filterTripsByStatus(status) {\n");
      out.write("                const rows = document.querySelectorAll('table tbody tr');\n");
      out.write("                if (!status) {\n");
      out.write("                    // Show all rows if no status selected\n");
      out.write("                    rows.forEach(row => row.style.display = '');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                rows.forEach(row => {\n");
      out.write("                    const statusCell = row.querySelector('td:nth-child(6)');\n");
      out.write("                    if (statusCell) {\n");
      out.write("                        const statusText = statusCell.textContent.toLowerCase().trim();\n");
      out.write("                        if (statusText.includes(status)) {\n");
      out.write("                            row.style.display = '';\n");
      out.write("                        } else {\n");
      out.write("                            row.style.display = 'none';\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                // Update the count in pagination\n");
      out.write("                updateResultCount();\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // Update the result count in pagination\n");
      out.write("            function updateResultCount() {\n");
      out.write("                const visibleRows = document.querySelectorAll('table tbody tr:not([style*=\"display: none\"])').length;\n");
      out.write("                const countSpan = document.querySelector('.text-gray-700 .font-medium');\n");
      out.write("                if (countSpan) {\n");
      out.write("                    countSpan.textContent = visibleRows;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
